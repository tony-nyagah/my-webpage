---
import BaseLayout from "../layouts/BaseLayout.astro";
import ProjectCard from "../components/ProjectCard.astro";
import ProjectFilter from "../components/ProjectFilter.astro";
import { getCollection } from "astro:content";

// Get all projects from content collection
const allProjects = await getCollection("projects", ({ data }) => {
  return data.draft !== true;
});

// Extract unique categories from projects
const allCategories = Array.from(
  new Set(
    allProjects
      .map((project) => project.data.category)
      .filter((category): category is string => Boolean(category))
  )
);
const categories = ["All", ...allCategories.sort()];

// Calculate stats
const totalProjects = allProjects.length;
const completedProjects = allProjects.filter(
  (p) => p.data.status === "Completed"
).length;
const inProgressProjects = allProjects.filter(
  (p) => p.data.status === "In Progress"
).length;
const allTech = Array.from(new Set(allProjects.flatMap((p) => p.data.tech)));
const openSourceProjects = allProjects.filter(
  (p) => p.data.category === "Open Source"
).length;
---

<BaseLayout pageTitle="Projects">
  <div class="page-container">
    <div class="container">
      <div class="page-header">
        <h1 class="page-title">Projects</h1>
        <p class="page-subtitle">
          A collection of my work spanning open source contributions, web
          applications, and system tools
        </p>
      </div>
      <ProjectFilter categories={categories} />

      <div class="projects-showcase">
        {
          allProjects.map((project, index) => (
            <ProjectCard
              title={project.data.title}
              description={project.data.description}
              tech={project.data.tech}
              status={project.data.status}
              category={project.data.category}
              github={project.data.github}
              codeberg={project.data.codeberg}
              gitlab={project.data.gitlab}
              demo={project.data.demo}
              image={project.data.image}
              highlights={project.data.highlights}
              featured={project.data.featured}
            />
          ))
        }
      </div>

      <div class="projects-stats">
        <div class="stats-grid">
          <div class="stat-card">
            <h3>{totalProjects}</h3>
            <p>Total Projects</p>
          </div>
          <div class="stat-card">
            <h3>{inProgressProjects}</h3>
            <p>In Progress</p>
          </div>
          <div class="stat-card">
            <h3>{completedProjects}</h3>
            <p>Completed</p>
          </div>
          <div class="stat-card">
            <h3>{allTech.length}+</h3>
            <p>Technologies</p>
          </div>
          <div class="stat-card">
            <h3>{openSourceProjects}</h3>
            <p>Open Source</p>
          </div>
        </div>
      </div>
    </div>
  </div>
</BaseLayout>
