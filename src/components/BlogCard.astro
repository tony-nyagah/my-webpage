---
interface Props {
  id: number;
  title: string;
  excerpt: string;
  date: string;
  readTime: string;
  type: "internal" | "external";
  slug?: string;
  externalUrl?: string;
  platform?: string;
  tags?: string[];
}

const {
  id,
  title,
  excerpt,
  date,
  readTime,
  type,
  slug,
  externalUrl,
  platform,
  tags,
} = Astro.props;

const formattedDate = new Date(date).toLocaleDateString("en-US", {
  year: "numeric",
  month: "short",
  day: "numeric",
});

// Determine the correct link
const blogLink = type === "internal" ? `/blog/${slug}` : externalUrl;
const linkTarget = type === "external" ? "_blank" : "_self";
---

<article class="blog-card" data-tags={tags ? tags.join(",").toLowerCase() : ""}>
  <div class="blog-card-content">
    <div class="blog-card-header">
      <h3 class="blog-card-title">
        <a
          href={blogLink}
          target={linkTarget}
          rel={type === "external" ? "noopener noreferrer" : undefined}
        >
          {title}
        </a>
      </h3>
      <div class="blog-card-meta">
        <time datetime={date}>
          {formattedDate}
        </time>
        <span class="blog-card-divider">•</span>
        <span>{readTime}</span>
        {
          platform && (
            <>
              <span class="blog-card-divider">•</span>
              <span class="blog-platform">{platform}</span>
            </>
          )
        }
      </div>
    </div>
    <p class="blog-card-excerpt">{excerpt}</p>
    {
      tags && tags.length > 0 && (
        <div class="blog-card-tags">
          {tags.map((tag) => (
            <span class="blog-tag">{tag}</span>
          ))}
        </div>
      )
    }
  </div>
</article>
